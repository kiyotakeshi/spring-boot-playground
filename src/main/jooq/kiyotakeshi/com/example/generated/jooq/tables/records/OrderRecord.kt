/*
 * This file is generated by jOOQ.
 */
package kiyotakeshi.com.example.generated.jooq.tables.records


import kiyotakeshi.com.example.generated.jooq.tables.Order

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrderRecord private constructor() : UpdatableRecordImpl<OrderRecord>(Order.ORDER) {

    open var orderId: Long
        set(value): Unit = set(0, value)
        get(): Long = get(0) as Long

    open var customerId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var description: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised OrderRecord
     */
    constructor(orderId: Long, customerId: Long, description: String): this() {
        this.orderId = orderId
        this.customerId = customerId
        this.description = description
        resetChangedOnNotNull()
    }
}
