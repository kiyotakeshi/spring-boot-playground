/*
 * This file is generated by jOOQ.
 */
package kiyotakeshi.com.example.generated.jooq


import kiyotakeshi.com.example.generated.jooq.tables.Customer
import kiyotakeshi.com.example.generated.jooq.tables.Order
import kiyotakeshi.com.example.generated.jooq.tables.OrderDetail

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Playground : SchemaImpl("playground", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>playground</code>
         */
        val PLAYGROUND: Playground = Playground()
    }

    /**
     * The table <code>playground.customer</code>.
     */
    val CUSTOMER: Customer get() = Customer.CUSTOMER

    /**
     * The table <code>playground.order</code>.
     */
    val ORDER: Order get() = Order.ORDER

    /**
     * The table <code>playground.order_detail</code>.
     */
    val ORDER_DETAIL: OrderDetail get() = OrderDetail.ORDER_DETAIL

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Customer.CUSTOMER,
        Order.ORDER,
        OrderDetail.ORDER_DETAIL
    )
}
